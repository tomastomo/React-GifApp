{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifApp.jsx","index.jsx"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVxB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAACC,GAIxB,OAFAC,QAAQC,IAAIF,GAGR,sBAAKG,UAAU,yCAAf,UACI,qBAAKC,IAAKJ,EAAMN,IAAIR,IAAKmB,IAAKL,EAAMN,IAAIE,QACxC,4BAAII,EAAMN,IAAIE,YCLbU,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WAEP3B,EAAQC,GACH2B,MAAK,SAAAC,GACFH,EAAS,CACLlB,KAAMqB,EACNL,SAAS,SAGlB,CAACvB,IAEDwB,EDfyBK,CAAa7B,GAAhCa,EAAb,EAAON,KAAcgB,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDnB,IAEnD,sBAAKmB,UAAU,YAAf,UACKI,GAAW,mBAAGJ,UAAU,mCAAb,wBAERN,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIC,cEZjCmB,EAAS,WAElB,MAAoC5C,mBAAS,CAAC,WAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,wCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAEX,OAAO,cAAC,EAAD,CAAwBA,SAAYA,GAAtBA,Y,MCd7CgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c73d9503.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    } \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n            \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValue} onChange={ (handleInputChange)}/>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n","export const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=szApFb4xrtTy0RxuvEOLqJsqowYVoZAp`;\n    const response = await fetch(url);\n    const {data} = await response.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url : img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = (props) => {\n\n    console.log(props);\n\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={props.img.url} alt={props.img.title}/>\n            <p>{props.img.title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data: images, loading} = useFetchGifs(category);\n    // Al ponerle :images le cambiamos el nombre para utilizar images en lugar de data\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\n            \n            <div className=\"card-grid\">\n                {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n                {\n                    images.map( img => (\n                        <GifGridItem key={img.id} img={img}/>\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs(category)\n            .then(imgs => {\n                setstate({\n                    data: imgs, \n                    loading: false\n                });\n            })\n        }, [category])\n\n    return state;\n\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifApp = () => {\n\n    const [categories, setCategories] = useState([' React']);\n\n    return (\n        <>\n            <h2>GifApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n            \n            \n            <ol>\n                {\n                    categories.map(category => {\n                        //return <li key={category}>{category}</li>\n                        return <GifGrid key={category} category = {category}/>\n                    })\n            }   \n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifApp } from './GifApp';\nimport './index.css'\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}